pivot_longer(!c(pondID, depth), values_to = "total", names_to = "family") %>%
ggplot(aes(x=pondID, y = total, fill=family)) +
geom_bar(stat = "identity", position = "fill") +
theme(axis.text.x=element_text(angle = 45, hjust = 1),
plot.caption = element_text(hjust = 0)) +
labs(x = "Present Taxonomic Families", y="Relative Abundance", title = "Species Richness across Ponds.",
fill = "Taxonomic Families",
caption = "Figure 4B. Relative abundance of taxonomic families by sample.") +
guides(fill=guide_legend(ncol=2))
ggsave("Plots/familyrelative.png")
SR <- specnumber(invertData[,-c(1,2)])
simpInv <- diversity(invertData[,-c(1,2)], index = "invsimpson")
simpEven <- simpInv / SR
brayCurtisInv <- 1 - vegdist(invertData[,-c(1,2)], method = "bray", diag = FALSE) %>%
as.matrix()
mod3index1 <- combinations(n = 6, r = 2, repeats.allowed = F, v = seq(1, 18, 3)) %>%
as.data.frame()
mod3index2 <- combinations(n = 6, r = 2, repeats.allowed = F, v = seq(2, 18, 3)) %>%
as.data.frame()
mod3index3 <- combinations(n = 6, r = 2, repeats.allowed = F, v = seq(3, 18, 3)) %>%
as.data.frame()
brayByDepth <- c()
for (i in 1:length(mod3index1$V1)){
brayByDepth <- rbind(brayByDepth,
c(50, brayCurtisInv[mod3index1$V1[i], mod3index1$V2[i]]))
}
temp2 <- 0
for (i in 1:length(mod3index2$V1)){
brayByDepth <- rbind(brayByDepth,
c(100, brayCurtisInv[mod3index2$V1[i], mod3index2$V2[i]]))
}
temp3 <- 0
for (i in 1:length(mod3index3$V1)){
brayByDepth <- rbind(brayByDepth,
c(150, brayCurtisInv[mod3index3$V1[i], mod3index3$V2[i]]))
}
brayByDepth <- as.data.frame(brayByDepth)
colnames(brayByDepth) <- c("depth", "bcSim")
brayByDepth %>%
ggplot(aes(x = depth, y = bcSim, group = depth)) +
geom_boxplot() +
labs(x = "Depth (cm)", y = "Similarity (Bray-Curtis)", title = "Bray-Curtis Similarity versus Depth")
ord3index1 <- combinations(n = 6, r = 2, repeats.allowed = F, v = 1:6) %>%
as.data.frame()
ord3index2 <- combinations(n = 6, r = 2, repeats.allowed = F, v = 7:12) %>%
as.data.frame()
ord3index3 <- combinations(n = 6, r = 2, repeats.allowed = F, v = 13:18) %>%
as.data.frame()
brayByPond <- c()
for (i in 1:length(ord3index1$V1)){
brayByPond <- rbind(brayByPond,
c("T106", brayCurtisInv[ord3index1$V1[i], ord3index1$V2[i]]))
}
for (i in 1:length(ord3index2$V1)){
brayByPond <- rbind(brayByPond,
c("T108", brayCurtisInv[ord3index2$V1[i], ord3index2$V2[i]]))
}
for (i in 1:length(ord3index3$V1)){
brayByPond <- rbind(brayByPond,
c("T109", brayCurtisInv[ord3index3$V1[i], ord3index3$V2[i]]))
}
brayByPond <- as.data.frame(brayByPond)
colnames(brayByPond) <- c("pond", "bcSim")
brayByPond$bcSim <- as.numeric(brayByPond$bcSim)
brayByPond %>%
ggplot(aes(x = pond, y = bcSim, group = pond)) +
geom_boxplot() +
labs(x = "Pond", y = "Similarity (Bray-Curtis)", title = "Bray-Curtis Similarity versus Pond")
tempModel <- lmer(Temperature ~ Depth*Num + (1|Pond), data = verticalSubData, REML = FALSE)
summary(tempModel)
doModel <- lmer(DO ~ Depth*Num + (1|Pond), data = verticalSubData, REML = FALSE)
summary(doModel)
condModel <- lmer(Conductivity ~ Depth*Num + (1|Pond), data = verticalSubData, REML = FALSE)
summary(condModel)
turbModel <- lmer(Turbidity ~ Depth*Num + (1|Pond), data = verticalSubData, REML = FALSE)
summary(turbModel)
#rand.slope.turb.model<-lmer(Turbidity~Depth*Num +(1+Depth|Pond), data = verticalSubData) #abject Failure
temp <- verticalSubData %>%
group_by(Pond, Depth) %>%
filter(Depth %in% c(50, 100, 150)) %>%
select(Temperature, DO, Conductivity, Turbidity) %>%
summarize(meanTemp = mean(Temperature), meanDO = mean(DO), meanCond = mean(Conductivity),
meanTurb = mean(Turbidity))
temp1 <- rbind(temp, data.frame(Pond = "T109", Depth = 150,
meanTemp = NA,
meanDO = NA,
meanCond = NA,
meanTurb = NA))
temp2 <- rbind(temp, data.frame(Pond = "T109", Depth = 150,
meanTemp = NA,
meanDO = NA,
meanCond = NA,
meanTurb = NA))
sites <- c(rep("A", 9), rep("B", 9))
dfMeanWater <- cbind(rbind(temp1, temp2), sites = sites)
dfMeanWater
numericalInvData <- invertData[,-c(1,2)]
SR <- specnumber(numericalInvData)
simp.inv <- diversity(numericalInvData, index = "invsimpson")
simp.even <- simp.inv / SR
simp.even
shan <- diversity(numericalInvData, index = "shannon")
exp.shan <- exp(shan)
shan.even <- shan / (log(SR))
dfDivFull <- cbind(dfMeanWater, data.frame(SR, simp.inv, simp.even, shan, shan.even, exp.shan))
dfDiv <- dfDivFull[-c(9, 18),]
dfDivFull
dfDivFull %>%
group_by(Pond) %>%
summarize(meanSR = mean(SR),
meanSimp = mean(simp.inv),
meanSimpEv = mean(simp.even),
meanShan = mean(shan),
meanShanEv = mean(shan.even),
meanShanEx = mean(exp.shan))
dfDivFull %>%
group_by(Depth) %>%
summarize(meanSR = mean(SR),
meanSimp = mean(simp.inv),
meanSimpEv = mean(simp.even),
meanShan = mean(shan),
meanShanEv = mean(shan.even),
meanShanEx = mean(exp.shan))
mean(dfDivFull$SR)
mean(dfDivFull$simp.inv)
mean(dfDivFull$simp.even)
mean(dfDivFull$shan)
mean(dfDivFull$shan.even)
mean(dfDivFull$exp.shan)
rarecurve(numericalInvData)
community.N <- rowSums(numericalInvData)
smallest.N <- min(community.N)
lines(x = c(smallest.N, smallest.N), y = c(0, max(SR)))
srModel <- lmer(SR ~ Depth + (1|Pond) + (sites|Pond),
data = dfDiv,
REML = FALSE)
summary(srModel)
srModel <- lm(SR ~ Depth*Pond,
data = dfDiv)
summary(srModel)
Anova(srModel, type = "III")
dfDivFull %>%
ggplot(aes(x = as.character(Depth), y = SR, colour = Pond, shape = factor(sites))) +
geom_jitter()  +
scale_x_discrete(limits = c("50", "100", "150")) +
labs(title = "Species Richness versus Depth", x = "Depth (cm)", y = "Species Richness",
colour = "Pond ID", shape = "Site")
ggsave("Plots/sr.png")
dfDivFull %>%
ggplot(aes(x = as.character(Depth), y = exp.shan, colour = Pond, shape = factor(sites))) +
geom_jitter()  +
scale_x_discrete(limits = c("50", "100", "150")) +
labs(title = "Exponential Shannon Index versus Depth", x = "Depth (cm)", y = "Exponential Shannon Index",
colour = "Pond ID", shape = "Site")
ggsave("Plots/shan.png")
dfDivFull %>%
ggplot(aes(x = as.character(Depth), y = shan.even, colour = Pond, shape = factor(sites))) +
geom_jitter()  +
scale_x_discrete(limits = c("50", "100", "150")) +
labs(title = "Shannon Evenness versus Depth", x = "Depth (cm)", y = "Shannon Evenness",
colour = "Pond ID", shape = "Site")
ggsave("Plots/shanev.png")
simpModel <- lmer(simp.inv ~ Depth + (1|Pond) + (sites|Pond),
data = dfDiv,
REML = FALSE)
summary(simpModel)
simpEvModel <- lmer(simp.even ~ Depth + (1|Pond) + (sites|Pond),
data = dfDiv,
REML = FALSE)
summary(simpEvModel)
shanModel <- lmer(exp.shan ~ Depth + (1|Pond) + (sites|Pond),
data = dfDiv,
REML = FALSE)
summary(shanModel)
shanModel.new <- lm(exp.shan ~ Pond,
data = dfDiv)
summary(shanModel.new)
Anova(shanModel.new, type = "III")
shanEvModel <- lmer(shan.even ~ Depth + (1|Pond) + (sites|Pond),
data = dfDiv,
REML = FALSE)
summary(shanEvModel)
shanEvModel.new <- lm(shan.even ~ Depth*Pond,
data = dfDiv)
summary(shanEvModel.new)
Anova(shanEvModel.new, type = "III")
shanEvModel.new <- lm(shan.even ~ Depth*Pond,
data = dfDiv)
summary(shanEvModel.new)
Anova(shanEvModel.new, type = "III")
brayCurtisInv <- 1 - vegdist(numericalInvData, method = "bray", diag = FALSE) %>%
as.matrix()
bray.matrix<-vegdist(numericalInvData, method = "bray")
#sorr
#### Making into relative abundances
Manipulating.wide<-numericalInvData
Manipulating.wide$Identifier<-rownames(numericalInvData)
#Calculating sample size
sample.size.vec<-as.vector(rowSums(numericalInvData))
dfDivFull$Sample.Size<-c(202, 144, 57, 179, 110, 66, 627, 132, 191, 331, 134, 138, 80, 78, 16, 281, 205, 180)
##
s.s.lm<-lm(Sample.Size~Depth,data=dfDivFull)
summary(s.s.lm)
Anova(s.s.lm, type = "III")
dfDivFull %>%
ggplot(aes(x = as.character(Depth), y = Sample.Size, colour = Pond, shape = factor(sites))) +
geom_jitter()  +
scale_x_discrete(limits = c("50", "100", "150")) +
labs(title = "Sample Size versus Depth", x = "Depth (cm)", y = "Sample Size",
colour = "Pond ID", shape = "Site")
ggsave("Plots/ss.png")
mod3index1 <- combinations(n = 6, r = 2, repeats.allowed = F, v = seq(1, 18, 3)) %>%
as.data.frame()
mod3index2 <- combinations(n = 6, r = 2, repeats.allowed = F, v = seq(2, 18, 3)) %>%
as.data.frame()
mod3index3 <- combinations(n = 6, r = 2, repeats.allowed = F, v = seq(3, 18, 3)) %>%
as.data.frame()
brayByDepth <- c()
for (i in 1:length(mod3index1$V1)){
brayByDepth <- rbind(brayByDepth,
c(50, brayCurtisInv[mod3index1$V1[i], mod3index1$V2[i]]))
}
temp2 <- 0
for (i in 1:length(mod3index2$V1)){
brayByDepth <- rbind(brayByDepth,
c(100, brayCurtisInv[mod3index2$V1[i], mod3index2$V2[i]]))
}
temp3 <- 0
for (i in 1:length(mod3index3$V1)){
brayByDepth <- rbind(brayByDepth,
c(150, brayCurtisInv[mod3index3$V1[i], mod3index3$V2[i]]))
}
brayByDepth <- as.data.frame(brayByDepth)
colnames(brayByDepth) <- c("depth", "bcSim")
brayByDepth %>%
ggplot(aes(x = depth, y = bcSim, group = depth)) +
geom_boxplot() +
labs(x = "Depth (cm)", y = "Similarity (Bray-Curtis)", title = "Bray-Curtis Similarity versus Depth")
ggsave("Plots/bcD.png")
ord3index1 <- combinations(n = 6, r = 2, repeats.allowed = F, v = 1:6) %>%
as.data.frame()
ord3index2 <- combinations(n = 6, r = 2, repeats.allowed = F, v = 7:12) %>%
as.data.frame()
ord3index3 <- combinations(n = 6, r = 2, repeats.allowed = F, v = 13:18) %>%
as.data.frame()
brayByPond <- c()
for (i in 1:length(ord3index1$V1)){
brayByPond <- rbind(brayByPond,
c("T106", brayCurtisInv[ord3index1$V1[i], ord3index1$V2[i]]))
}
for (i in 1:length(ord3index2$V1)){
brayByPond <- rbind(brayByPond,
c("T108", brayCurtisInv[ord3index2$V1[i], ord3index2$V2[i]]))
}
for (i in 1:length(ord3index3$V1)){
brayByPond <- rbind(brayByPond,
c("T109", brayCurtisInv[ord3index3$V1[i], ord3index3$V2[i]]))
}
brayByPond <- as.data.frame(brayByPond)
colnames(brayByPond) <- c("pond", "bcSim")
brayByPond$bcSim <- as.numeric(brayByPond$bcSim)
brayByPond %>%
ggplot(aes(x = pond, y = bcSim, group = pond)) +
geom_boxplot() +
labs(x = "Pond", y = "Similarity (Bray-Curtis)", title = "Bray-Curtis Similarity versus Pond")
ggsave("Plots/bcP.png")
paInvData <- numericalInvData
paInvData[paInvData > 0] <- 1
sorensonInv <- 1 - vegdist(numericalInvData, method = "jaccard", diag = FALSE) %>%
as.matrix()
mod3index1 <- combinations(n = 6, r = 2, repeats.allowed = F, v = seq(1, 18, 3)) %>%
as.data.frame()
mod3index2 <- combinations(n = 6, r = 2, repeats.allowed = F, v = seq(2, 18, 3)) %>%
as.data.frame()
mod3index3 <- combinations(n = 6, r = 2, repeats.allowed = F, v = seq(3, 18, 3)) %>%
as.data.frame()
sorenByDepth <- c()
for (i in 1:length(mod3index1$V1)){
sorenByDepth <- rbind(sorenByDepth,
c(50, sorensonInv[mod3index1$V1[i], mod3index1$V2[i]]))
}
temp2 <- 0
for (i in 1:length(mod3index2$V1)){
sorenByDepth <- rbind(sorenByDepth,
c(100, sorensonInv[mod3index2$V1[i], mod3index2$V2[i]]))
}
temp3 <- 0
for (i in 1:length(mod3index3$V1)){
sorenByDepth <- rbind(sorenByDepth,
c(150, sorensonInv[mod3index3$V1[i], mod3index3$V2[i]]))
}
sorenByDepth <- as.data.frame(sorenByDepth)
colnames(sorenByDepth) <- c("depth", "sorSim")
sorenByDepth %>%
ggplot(aes(x = depth, y = sorSim, group = depth)) +
geom_boxplot() +
labs(x = "Depth (cm)", y = "Similarity (Jaccard)", title = "Jaccard Similarity versus Depth")
ggsave("Plots/jacD.png")
ord3index1 <- combinations(n = 6, r = 2, repeats.allowed = F, v = 1:6) %>%
as.data.frame()
ord3index2 <- combinations(n = 6, r = 2, repeats.allowed = F, v = 7:12) %>%
as.data.frame()
ord3index3 <- combinations(n = 6, r = 2, repeats.allowed = F, v = 13:18) %>%
as.data.frame()
sorenByPond <- c()
for (i in 1:length(ord3index1$V1)){
sorenByPond <- rbind(sorenByPond,
c("T106", sorensonInv[ord3index1$V1[i], ord3index1$V2[i]]))
}
for (i in 1:length(ord3index2$V1)){
sorenByPond <- rbind(sorenByPond,
c("T108", sorensonInv[ord3index2$V1[i], ord3index2$V2[i]]))
}
for (i in 1:length(ord3index3$V1)){
sorenByPond <- rbind(sorenByPond,
c("T109", sorensonInv[ord3index3$V1[i], ord3index3$V2[i]]))
}
sorenByPond <- as.data.frame(sorenByPond)
colnames(sorenByPond) <- c("pond", "sorSim")
sorenByPond$sorSim <- as.numeric(sorenByPond$sorSim)
sorenByPond %>%
ggplot(aes(x = pond, y = sorSim, group = pond)) +
geom_boxplot() +
labs(x = "Pond", y = "Similarity (Jaccard)", title = "Jaccard Similarity versus Pond")
ggsave("Plots/jacP.png")
brayCurtisDis <- vegdist(numericalInvData[-c(9,18),], method = "bray")
adonis2(brayCurtisDis ~ Pond + Depth + meanTemp + meanDO + meanCond + meanTurb,
data = dfDiv)
bc.pcoa<-cmdscale(brayCurtisDis,eig = T)
ordiplot(bc.pcoa)
#how well do these axes fit
bc.pcoa$eig/sum(bc.pcoa$eig)
Long.data<-invertData %>%
filter(pondID != "T109A3" & pondID != "T109B3") %>%
pivot_longer(!c(pondID, depth), values_to = "total", names_to = "family")
#getting sample sizes
Long.data<-Long.data %>% group_by(pondID,depth) %>% mutate(Sample_Size=sum(total)) %>% ungroup()
Long.data<-Long.data %>% group_by(pondID,depth) %>% mutate(Relative.Abundance=total/Sample_Size) %>% ungroup()
#Flip it back into a wide format using relative abundances as the values
wide.relabund <- pivot_wider(Long.data,id_cols = c(pondID, depth),  names_from = "family", values_from = Relative.Abundance)
#remove the depth column
wide.relabund<-wide.relabund %>% dplyr::select(-depth)
wide.relabund<-column_to_rownames(wide.relabund,var="pondID")
#### Getting distance matrixes from relative abundances
Rel.BC<-vegdist(wide.relabund,method="bray")
Rel.Sorr<-vegdist(wide.relabund,method="jaccard")
bc.pcoa<-cmdscale(Rel.BC,eig = T)
ordiplot(bc.pcoa)
#how well do these axes fit
bc.pcoa$eig/sum(bc.pcoa$eig) #78% of variation explained in axis 1, 11% in axis 2
# They fit really well
#######
Jacc.pcoa<-cmdscale(Rel.Sorr,eig = T)
ordiplot(Jacc.pcoa)
Jacc.pcoa$eig/sum(Jacc.pcoa$eig) #Similarly good 65% in first and 16% in second 80% in first 2 axes
#####
#Let's extract the axes to plot
BC.PCOA.axis1<-bc.pcoa$points[1:16]
BC.PCOA.axis2<-bc.pcoa$points[17:32]
#Jaccard
JC.PCOA.axis1<-Jacc.pcoa$points[1:16]
JC.PCOA.axis2<-Jacc.pcoa$points[17:32]
####
#Gluing these back onto a dataframe with identifying information
POND <- c("T106A1", "T106A2", "T106A3",
"T108A1", "T108A2", "T108A3",
"T109A1", "T109A2",
"T106B1", "T106B2", "T106B3",
"T108B1", "T108B2", "T108B3",
"T109B1", "T109B2")
dfDiv <- cbind(dfDiv, pondID = POND)
## Gluing
dfDiv$BC.PCOA.axis1<-BC.PCOA.axis1
dfDiv$BC.PCOA.axis2<-BC.PCOA.axis2
dfDiv$JC.PCOA.axis1<-JC.PCOA.axis1
dfDiv$JC.PCOA.axis2<-JC.PCOA.axis2
# PLotting pretty
#Do we see greater clustering by pond or by depth?
dfDiv %>%
ggplot(aes(x=BC.PCOA.axis1,BC.PCOA.axis2,
colour=as.character(Depth),shape=Pond, group =Depth)) +
geom_point() +
stat_ellipse() +
labs(title = "PERMANOVA (Bray Curtis, Depth Cluster)", x = "Bray Curtis Axis 1", y = "Bray Curtis Axis 2",
shape = "Pond ID", colour = "Depth (cm)")
ggsave("Plots/clusterBCd.png")
dfDiv %>% ggplot(aes(x=BC.PCOA.axis1,BC.PCOA.axis2,color=as.character(Pond),
shape=as.character(Depth), group =Pond)) +
geom_point() +
stat_ellipse() +
labs(title = "PERMANOVA (Bray Curtis, Pond Cluster)", x = "Bray Curtis Axis 1", y = "Bray Curtis Axis 2",
shape = "Depth (cm)", colour = "Pond ID")
ggsave("Plots/clusterBCp.png")
##### Jaccard
dfDiv %>% ggplot(aes(x=JC.PCOA.axis1,JC.PCOA.axis2,color=as.character(Depth),
shape=Pond, group =Depth)) +
geom_point() +
stat_ellipse() +
labs(title = "PERMANOVA (Jaccard, Depth Cluster)", x = "Jaccard Axis 1", y = "Jaccard Axis 2",
shape = "Pond ID", colour = "Depth (cm)")
ggsave("Plots/clusterJCd.png")
dfDiv %>% ggplot(aes(x=JC.PCOA.axis1,JC.PCOA.axis2,color=as.character(Pond),
shape=as.character(Depth), group =Pond)) +
geom_point() +
stat_ellipse() +
labs(title = "PERMANOVA (Jaccard, Pond Cluster)", x = "Jaccard Axis 1", y = "Jaccard Curtis Axis 2",
shape = "Depth (cm)", colour = "Pond ID")
ggsave("Plots/clusterJCp.png")
#Visually it looks like deeper are a subset of shallower. Can we see if any of our chemistry or depth parameters are predicting this?
### First perform model selection with distance-based RDA (db-RDA) then permanova() of the significant factors
#We need to scale our variables to common units
dfDiv<-dfDiv %>% ungroup()
Things.to.scale<-dfDiv %>% dplyr::select(pondID,meanTemp,meanDO,meanCond,meanTurb)
scaler.int<-scale(Things.to.scale[,2:5])
scaler.int.df<-as.data.frame(scaler.int)
# Extracting as vectors and pasting back on
dfDiv$Z.Temp<-as.vector(scaler.int.df$meanTemp)
dfDiv$Z.DO<-as.vector(scaler.int.df$meanDO)
dfDiv$Z.Cond<-as.vector(scaler.int.df$meanCond)
dfDiv$Z.Turb<-as.vector(scaler.int.df$meanTurb)
#### making a categorical depth
dfDiv$Cat.depth<-as.character(dfDiv$Depth)
#
BC.db_RDA<-capscale(Rel.BC~Depth+Z.Temp+Z.DO+Z.Cond+Z.Turb,data=dfDiv)
ordistep(BC.db_RDA) #Just DO seems important
cor(dfDiv$Depth,dfDiv$Z.DO) #Nearly perfectly correlated so hard to say whether driven by DO or some other ocrrelate with depth
#### JAcc
JC.db_RDA<-capscale(Rel.Sorr~Depth+Z.Temp+Z.DO+Z.Cond+Z.Turb,data=dfDiv)
ordistep(JC.db_RDA) #Just DO
#### Anything different with a permanova?
perm.1<-adonis2(Rel.BC~Depth+Z.Temp+Z.DO+Z.Cond+Z.Turb,data=dfDiv,permutations=9999)
perm.2<-adonis2(Rel.Sorr~Depth+Z.Temp+Z.DO+Z.Cond+Z.Turb,data=dfDiv,permutations=99999)
#Nothing; marginally non-significant effect of DO
### Early results at least suggest that at the community level, only Dissolved oxygen predicts differences in biological communities. and dissolved oxygen changes with depth (Decreases)
##### DO we have sig effect of temperature?
Saturated.Shann.div<-lm(shan~Depth + Z.Temp + Z.DO + Z.Cond + Z.Turb+Pond, data = dfDiv)
step(Saturated.Shann.div)
summary(Saturated.Shann.div)
Anova(Saturated.Shann.div,type="III")
#Selected chemistry
selected.shannon.div.lm<-lm(shan~Depth + Z.Temp + Z.DO + Z.Cond +Pond, data = dfDiv)
summary(selected.shannon.div.lm)
Anova(selected.shannon.div.lm, type = "III")
# None of our chemistry variables significantly predict shannon diversity
Saturated.SR.div<-lm(SR~Depth + Z.Temp + Z.DO + Z.Cond + Z.Turb+Pond, data = dfDiv)
step(Saturated.SR.div)
selected.SR.div<-lm(SR~Depth + Z.Temp + Z.DO + Z.Cond+Pond, data = dfDiv)
summary(selected.SR.div)
Anova(selected.SR.div,type="III")
#Selected chemistry
selected.shannon.div.lm<-lm(shan~Z.DO ,data=dfDiv)
summary(selected.shannon.div.lm)
anova(selected.shannon.div.lm)
# None of our chemistry variables significantly predict shannon diversity
#Does model output change iwth depfth as numeric?
aturated.SR.div<-lm(SR~Cat.depth + Z.Temp + Z.DO + Z.Cond + Z.Turb+Pond, data = dfDiv)
step(aturated.SR.div)
selected.SR.div.lm<-lm(SR ~ Cat.depth + Z.Cond + Pond, data = dfDiv)
summary(selected.SR.div.lm)
Anova(selected.SR.div.lm,type="III")
#shan with cat depth??
aturated.shan.div<-lm(shan~Cat.depth + Z.Temp + Z.DO + Z.Cond + Z.Turb+Pond, data = dfDiv)
step(aturated.shan.div)
selected.shan.div.lm<-lm(shan ~ Cat.depth + Z.Cond + Pond, data = dfDiv)
summary(selected.shan.div.lm)
Anova(selected.shan.div.lm,type="III")
aturated.shan.div<-lm(shan~Z.Temp*Cat.depth + Z.DO*Cat.depth + Z.Cond*Cat.depth + Z.Turb, data = dfDiv)
step(aturated.shan.div)
selected.shan.div.lm<-lm(shan ~ Z.Temp + Cat.depth + Z.DO + Z.Cond + Z.Temp:Cat.depth, data = dfDiv)
summary(selected.shan.div.lm)
Anova(selected.shan.div.lm,type="III")
selected.shan.div.lm<-lm(shan ~ Z.Cond*Depth, data = dfDiv)
summary(selected.shan.div.lm)
Anova(selected.shan.div.lm,type="III")
selected.shan.div.lm<-lm(SR ~ Z.Cond*Depth, data = dfDiv)
summary(selected.shan.div.lm)
Anova(selected.shan.div.lm,type="III")
cor(dfDiv[,19:22])
cor(dfDiv$meanTemp, dfDiv$meanDO, )
### how does chem cluster with pca?
Stanrdard.chem.pca<-prcomp(dfDiv[,19:22])
biplot(Stanrdard.chem.pca)
#Loadings
Stanrdard.chem.pca$rotation
dfDiv %>%
ggplot(aes(x = Z.Cond, y = shan, colour = as.character(Depth))) +
geom_jitter()  +
scale_x_discrete(limits = c("50", "100", "150")) +
labs(title = "Shannon Evenness versus Depth", x = "Depth (cm)", y = "Shannon Evenness",
colour = "Pond ID", shape = "Site")
dfDiv %>%
ggplot(aes(x = Z.Cond, y = shan, colour = as.character(Depth))) +
geom_jitter()  +
labs(title = "Shannon Evenness versus Depth", x = "Depth (cm)", y = "Shannon Evenness",
colour = "Pond ID", shape = "Site")
dfDiv %>%
ggplot(aes(x = Z.Cond, y = shan, colour = as.character(Depth))) +
geom_jitter()  +
labs(title = "Shannon Index versus Conductivity", x = "Conductivity (Standardized)", y = "Shannon",
colour = "Depth (cm)")
dfDiv %>%
ggplot(aes(x = Z.Cond, y = shan, colour = as.character(Depth))) +
geom_jitter()  +
labs(title = "Shannon Index versus Conductivity", x = "Conductivity (Standardized)", y = "Shannon Index",
colour = "Depth (cm)")
ggsave("Plots/condShan.png")
dfDiv %>%
ggplot(aes(x = Z.Cond, y = SR, colour = as.character(Depth))) +
geom_jitter()  +
labs(title = "Species Richness versus Conductivity", x = "Conductivity (Standardized)", y = "Species Richness",
colour = "Depth (cm)")
ggsave("Plots/condSR.png")
